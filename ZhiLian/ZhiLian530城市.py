#encoding: utf-8
import requests
import math
import time
import pymongo
#530个城市代码
citycodes = ['601', '825', '723', '862', '671', '819', '897', '10176', '598', '903', '852', '10081', '562', '918', '481', '526', '493', '502', '913', '483', '482', '530', '588', '856', '570', '717', '678', '666', '789', '867', '620', '618', '828', '817', '597', '896', '10194', '794', '834', '10193', '603', '895', '932', '513', '486', '484', '487', '485', '499', '514', '551', '801', '613', '749', '749', '573', '650', '755', '638', '673', '572', '758', '781', '579', '590', '679', '848', '894', '10195', '10080', '10137', '676', '611', '2159', '10190', '905', '836', '10086', '600', '779', '627', '604', '805', '715', '706', '577', '841', '815', '634', '10114', '10183', '842', '10151', '845', '10188', '874', '10187', '10056', '931', '492', '496', '592', '741', '748', '10065', '516', '768', '681', '602', '674', '700', '10158', '790', '10099', '10069', '10020', '607', '495', '494', '763', '697', '549', '822', '557', '787', '807', '814', '877', '820', '10126', '10057', '10122', '10142', '889', '10181', '792', '883', '622', '799', '568', '653', '664', '752', '575', '587', '657', '643', '718', '669', '860', '593', '612', '773', '10198', '724', '667', '745', '760', '737', '672', '776', '632', '893', '880', '10070', '879', '882', '10133', '885', '2556', '10082', '900', '796', '795', '625', '10138', '837', '2157', '881', '506', '509', '702', '614', '709', '656', '769', '2512', '659', '744', '694', '726', '782', '629', '605', '582', '580', '698', '692', '10044', '404001', '624', '2161', '10067', '865', '10201', '2163', '2160', '866', '10175', '10148', '742', '649', '872', '10028', '488', '914', '491', '930', '720', '831', '640', '10118', '899', '10144', '891', '898', '10164', '507', '864', '574', '642', '716', '714', '786', '721', '729', '847', '823', '713', '810', '608', '585', '689', '663', '677', '586', '616', '761', '804', '904', '2164', '10196', '10089', '843', '10150', '821', '853', '846', '10191', '876', '10197', '10120', '10180', '875', '668', '806', '631', '774', '771', '10157', '812', '508', '528', '635', '691', '811', '785', '731', '641', '654', '559', '688', '690', '809', '851', '2054', '10134', '844', '519', '915', '511', '722', '683', '727', '609', '3404', '693', '803', '2162', '10052', '871', '10163', '515', '703', '567', '558', '778', '685', '623', '832', '660', '827', '630', '10136', '10169', '829', '830', '791', '873', '10153', '10192', '686', '512', '712', '850', '912', '10051', '10060', '10128', '505', '521', '522', '538', '765', '599', '565', '800', '767', '732', '658', '615', '639', '648', '675', '747', '701', '753', '738', '730', '863', '619', '808', '764', '684', '633', '775', '10170', '10145', '849', '10130', '10160', '10179', '10061', '887', '10159', '626', '581', '839', '10182', '10161', '919', '490', '517', '531', '662', '576', '710', '647', '566', '610', '855', '591', '617', '670', '868', '826', '902', '10112', '911', '10149', '10140', '10155', '10127', '10177', '892', '10189', '563', '523', '916', '524', '736', '711', '708', '655', '890', '636', '665', '858', '10186', '10129', '10185', '838', '589', '596', '10031', '10166', '888', '788', '10178', '10184', '869', '10139', '917', '525', '854', '555', '682', '857', '740', '725', '637', '728', '733', '569', '560', '695', '743', '680', '746', '878', '10104', '10059', '840', '595', '10168', '10167', '751', '762', '10154', '584', '594', '10023', '10058', '10152', '933', '561', '520', '497', '518', '510', '498', '707', '644', '645', '739', '3376', '606', '861', '793', '583', '2513', '754', '813', '859', '621', '833', '777', '757', '699', '886', '578', '759', '783', '696', '816', '10116', '10050', '10124', '10470', '907', '628', '901', '10171', '910', '10091', '10055', '10085', '909', '884', '503', '504', '500', '501', '527', '529', '719', '705', '770', '652', '571', '687', '772', '646', '780', '766', '750', '704', '824', '735', '734', '802', '661', '870', '756', '835', '10510', '906', '10131', '818', '10143']
city = {'601': '鞍山', '825': '安顺', '723': '安阳', '862': '安康', '671': '安庆', '819': '阿坝', '897': '阿克苏', '10176': '阿拉尔', '598': '阿拉善盟', '903': '阿勒泰', '852': '阿里', '10081': '安达', '562': '澳门', '918': '阿尔及利亚', '481': '阿根廷', '526': '阿联酋', '493': '埃及', '502': '爱尔兰', '913': '安哥拉', '483': '奥地利', '482': '澳大利亚', '530': '北京', '588': '包头', '856': '宝鸡', '570': '保定', '717': '滨州', '678': '亳州', '666': '蚌埠', '789': '北海', '867': '白银', '620': '白城', '618': '白山', '828': '毕节', '817': '巴中', '597': '巴彦淖尔', '896': '巴音郭楞', '10194': '白沙', '794': '百色', '834': '保山', '10193': '保亭', '603': '本溪', '895': '博尔塔拉', '932': '北屯区', '513': '巴基斯坦', '486': '巴西', '484': '白俄罗斯', '487': '保加利亚', '485': '比利时', '499': '冰岛', '514': '波兰', '551': '重庆', '801': '成都', '613': '长春', '749': '长沙', '573': '沧州', '650': '常熟', '755': '常德', '638': '常州', '673': '滁州', '572': '承德', '758': '郴州', '781': '潮州', '579': '长治', '590': '赤峰', '679': '池州', '848': '昌都', '894': '昌吉', '10195': '昌江', '10080': '昌图', '10137': '长葛', '676': '巢湖', '611': '朝阳', '2159': '城阳', '10190': '澄迈', '905': '崇左', '836': '楚雄', '10086': '慈溪', '600': '大连', '779': '东莞', '627': '大庆', '604': '丹东', '805': '德阳', '715': '德州', '706': '东营', '577': '大同', '841': '大理', '815': '达州', '634': '大兴安岭', '10114': '丹阳', '10183': '儋州', '842': '德宏', '10151': '德清', '845': '迪庆', '10188': '定安', '874': '定西', '10187': '东方', '10056': '东阳', '931': '东港', '492': '丹麦', '496': '德国', '592': '鄂尔多斯', '741': '鄂州', '748': '恩施', '10065': '峨眉', '516': '俄罗斯联邦', '768': '佛山', '681': '福州', '602': '抚顺', '674': '阜阳', '700': '抚州', '10158': '方家山', '790': '防城港', '10099': '肥城', '10069': '凤阳', '10020': '福安', '607': '阜新', '495': '法国', '494': '芬兰', '763': '广州', '697': '赣州', '549': '广西', '822': '贵阳', '557': '甘肃', '787': '桂林', '807': '广元', '814': '广安', '877': '甘南', '820': '甘孜', '10126': '高邮', '10057': '公安', '10122': '公主岭', '10142': '固安', '889': '固原', '10181': '广德', '792': '贵港', '883': '果洛', '622': '哈尔滨', '799': '海口', '568': '邯郸', '653': '杭州', '664': '合肥', '752': '衡阳', '575': '衡水', '587': '呼和浩特', '657': '湖州', '643': '淮安', '718': '菏泽', '669': '淮北', '860': '汉中', '593': '呼伦贝尔', '612': '葫芦岛', '773': '惠州', '10198': '珲春', '724': '鹤壁', '667': '淮南', '745': '黄冈', '760': '怀化', '737': '黄石', '672': '黄山', '776': '河源', '632': '黑河', '893': '哈密', '880': '海北', '10070': '海城', '879': '海东', '882': '海南州', '10133': '海宁', '885': '海西', '2556': '海阳', '10082': '和顺', '900': '和田', '796': '河池', '795': '贺州', '625': '鹤岗', '10138': '鹤山', '837': '红河', '2157': '黄岛', '881': '黄南', '506': '韩国', '509': '荷兰', '702': '济南', '614': '吉林', '709': '济宁', '656': '嘉兴', '769': '江门', '2512': '江阴', '659': '金华', '744': '荆州', '694': '九江', '726': '焦作', '782': '揭阳', '629': '佳木斯', '605': '锦州', '582': '晋中', '580': '晋城', '698': '吉安', '692': '景德镇', '10044': '济源', '404001': '吉首市', '624': '鸡西', '2161': '即墨', '10067': '嘉善', '865': '嘉峪关', '10201': '简阳', '2163': '胶南', '2160': '胶州', '866': '金昌', '10175': '金湖', '10148': '晋江', '742': '荆门', '649': '靖江', '872': '酒泉', '10028': '句容', '488': '加拿大', '914': '加纳', '491': '捷克', '930': '柬埔寨', '720': '开封', '831': '昆明', '640': '昆山', '10118': '开平', '899': '喀什', '10144': '开原', '891': '克拉玛依', '898': '克孜勒苏', '10164': '奎屯市', '507': '科威特', '864': '兰州', '574': '廊坊', '642': '连云港', '716': '聊城', '714': '临沂', '786': '柳州', '721': '洛阳', '729': '漯河', '847': '拉萨', '823': '六盘水', '713': '莱芜', '810': '乐山', '608': '辽阳', '585': '临汾', '689': '龙岩', '663': '丽水', '677': '六安', '586': '吕梁', '616': '辽源', '761': '娄底', '804': '泸州', '904': '来宾', '2164': '莱西', '10196': '乐东', '10089': '乐清', '843': '丽江', '10150': '溧阳', '821': '凉山', '853': '林芝', '846': '临沧', '10191': '临高', '876': '临夏', '10197': '陵水', '10120': '龙川', '10180': '龙泉', '875': '陇南', '668': '马鞍山', '806': '绵阳', '631': '牡丹江', '774': '梅州', '771': '茂名', '10157': '满洲里', '812': '眉山', '508': '马来西亚', '528': '美国', '635': '南京', '691': '南昌', '811': '南充', '785': '南宁', '731': '南阳', '641': '南通', '654': '宁波', '559': '宁夏', '688': '南平', '690': '宁德', '809': '内江', '851': '那曲', '2054': '南沙区', '10134': '宁海', '844': '怒江', '519': '南非', '915': '尼日利亚', '511': '挪威', '722': '平顶山', '683': '莆田', '727': '濮阳', '609': '盘锦', '3404': '普宁', '693': '萍乡', '803': '攀枝花', '2162': '平度', '10052': '平湖', '871': '平凉', '10163': '普洱', '515': '葡萄牙', '703': '青岛', '567': '秦皇岛', '558': '青海', '778': '清远', '685': '泉州', '623': '齐齐哈尔', '832': '曲靖', '660': '衢州', '827': '黔西南', '630': '七台河', '10136': '启东', '10169': '潜江', '829': '黔东南', '830': '黔南', '791': '钦州', '873': '庆阳', '10153': '琼海', '10192': '琼中', '686': '泉港区', '512': '其他国家', '712': '日照', '850': '日喀则', '912': '荣成', '10051': '如皋', '10060': '乳山', '10128': '瑞安', '505': '日本', '521': '瑞典', '522': '瑞士', '538': '上海', '765': '深圳', '599': '沈阳', '565': '石家庄', '800': '三亚', '767': '汕头', '732': '商丘', '658': '绍兴', '615': '四平', '639': '苏州', '648': '宿迁', '675': '宿州', '747': '随州', '701': '上饶', '753': '邵阳', '738': '十堰', '730': '三门峡', '863': '商洛', '619': '松原', '808': '遂宁', '764': '韶关', '684': '三明', '633': '绥化', '775': '汕尾', '10170': '三河', '10145': '三门', '849': '山南', '10130': '上虞', '10160': '尚志', '10179': '神农架', '10061': '石河子', '887': '石嘴山', '10159': '双城', '626': '双鸭山', '581': '朔州', '839': '思茅', '10182': '宿松', '10161': '绥芬河', '919': '塞内加尔', '490': '塞浦路斯', '517': '沙特阿拉伯', '531': '天津', '662': '台州', '576': '太原', '710': '泰安', '647': '泰州', '566': '唐山', '610': '铁岭', '855': '铜川', '591': '通辽', '617': '通化', '670': '铜陵', '868': '天水', '826': '铜仁', '902': '塔城', '10112': '台山', '911': '太仓市', '10149': '泰兴', '10140': '天门', '10155': '通州', '10127': '桐乡', '10177': '图木舒克', '892': '吐鲁番', '10189': '屯昌', '563': '台湾省', '523': '泰国', '916': '坦桑尼亚', '524': '土耳其', '736': '武汉', '711': '威海', '708': '潍坊', '655': '温州', '890': '乌鲁木齐', '636': '无锡', '665': '芜湖', '858': '渭南', '10186': '万宁', '10129': '温岭', '10185': '文昌', '838': '文山', '589': '乌海', '596': '乌兰察布', '10031': '乌审旗', '10166': '乌苏', '888': '吴忠', '788': '梧州', '10178': '五家渠', '10184': '五指山', '869': '武威', '10139': '武穴', '917': '乌干达', '525': '乌克兰', '854': '西安', '555': '西藏', '682': '厦门', '857': '咸阳', '740': '襄阳', '725': '新乡', '637': '徐州', '728': '许昌', '733': '信阳', '569': '邢台', '560': '新疆', '695': '新余', '743': '孝感', '680': '宣城', '746': '咸宁', '878': '西宁', '10104': '西昌', '10059': '西平', '840': '西双版纳', '595': '锡林郭勒盟', '10168': '仙桃', '10167': '香河', '751': '湘潭', '762': '湘西', '10154': '象山', '584': '忻州', '594': '兴安盟', '10023': '兴城', '10058': '兴平', '10152': '盱眙', '933': '西咸新区', '561': '香港', '520': '西班牙', '497': '希腊', '518': '新加坡', '510': '新西兰', '498': '匈牙利', '707': '烟台', '644': '盐城', '645': '扬州', '739': '宜昌', '3376': '义乌', '606': '营口', '861': '榆林', '793': '玉林', '583': '运城', '2513': '宜兴', '754': '岳阳', '813': '宜宾', '859': '延安', '621': '延边', '833': '玉溪', '777': '阳江', '757': '益阳', '699': '宜春', '886': '银川', '578': '阳泉', '759': '永州', '783': '云浮', '696': '鹰潭', '816': '雅安', '10116': '兖州', '10050': '燕郊开发区', '10124': '扬中', '10470': '杨凌', '907': '洋浦市/洋浦经济开发区', '628': '伊春', '901': '伊犁', '10171': '宜城', '910': '永济市', '10091': '永嘉', '10055': '永康', '10085': '余姚', '909': '玉环县', '884': '玉树', '503': '以色列', '504': '意大利', '500': '印度', '501': '印度尼西亚', '527': '英国', '529': '越南', '719': '郑州', '705': '枣庄', '770': '湛江', '652': '张家港', '571': '张家口', '687': '漳州', '772': '肇庆', '646': '镇江', '780': '中山', '766': '珠海', '750': '株洲', '704': '淄博', '824': '遵义', '735': '驻马店', '734': '周口', '802': '自贡', '661': '舟山', '870': '张掖', '756': '张家界', '835': '昭通', '10510': '肇东市', '906': '中卫', '10131': '诸暨', '818': '资阳', '10143': '遵化'}
# citycodes = ['702']
# city = {'702': '济南'}
def get_json(url):
    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:61.0) Gecko/20100101 Firefox/61.0',
        'X-Requested-With': 'XMLHttpRequest', 'X-Anit-Forge-Token': 'None',
        'Referer': 'https://sou.zhaopin.com/?jl=551&kw=python&kt=3&sf=0&st=0'
    }
    session = requests.session()
    res = session.get(url,headers=headers)
    return res

def parse_json(res):
    resp = res.json()
    positions = resp['data']['results']
    info_list=[]
    for position in positions:
        jobName = position['jobName']#工作岗位
        company = position['company']['name']#公司名称
        type = position['company']['type']['name']#融资类型
        try:
            size = position['company']['size']['name']#公司规模
        except KeyError as  e:
            size = ''
        city = position['city']['items'][0]['name']  # 城市
        try:
            city_name = position['city']['items'][1]['name']  # 地区
        except:
            city_name = city
        updateDate = position['updateDate']#发布时间
        salary = position['salary']#薪水
        eduLevel = position['eduLevel']['name']#学历要求
        try:
            workingExp = position['workingExp']['name']#工作经验
        except:
            workingExp = '无经验'
        positionURL = position['positionURL']#职位链接
        welfare = position['welfare']#公司福利

        """写入新的列表，存入csv"""
        # info = [jobName,city,salary,eduLevel,workingExp,company,type,size,updateDate,welfare,positionURL]
        # info_list.append(info)

        """写入字典，存入数据库"""
        info = {"工作岗位":jobName ,"城市":city,'地区':city_name, "薪水":salary,"学历要求":eduLevel, "工作经验":workingExp,
                "公司名称":company, "融资类型":type, "公司规模":size,  "发布时间":updateDate,"公司福利":welfare,"职位链接":positionURL}
        info_list.append(info)
        # print(info)
    return info_list

def get_page_num(count):
    page_num = math.ceil(count / 90)
    print("一共有%d页招聘信息"%page_num)
    return page_num

if __name__ == '__main__':
    job = input("请输入想要获取的职位：")
    start = time.clock()
    client = pymongo.MongoClient()  # 链接pymongo数据库
    db = client.ZhiLian  # 创建数据库
    collection = db.AllCity[job]
    num = 0
    for citycode in citycodes:
        # collection = db[city[citycode]+job]  # 创建数据表
        url = 'https://fe-api.zhaopin.com/c/i/sou?pageSize=90&cityId={}&workExperience=-1&education=-1&companyType=-1&employmentType=-1&jobWelfareTag=-1&kw={}&kt=3'.format(
            citycode, job)
        resp = get_json(url)
        resp = resp.json()
        condition = resp['data']
        if ('count' in condition):
            counts = resp['data']['count']
            print(city[citycode] +' 代码 '+citycode+ "  总共%s条信息" % counts)
            num += counts
            for i in range(1, get_page_num(counts) + 1):
                print("开始第%s页" % i)
                url = 'https://fe-api.zhaopin.com/c/i/sou?start={}&pageSize=90&cityId={}&salary=0,0&workExperience=-1&education=-1&companyType=-1&employmentType=-1&jobWelfareTag=-1&kw={}&kt=3'.format(
                    (i - 1) * 90,citycode,job)
                resp = get_json(url)
                try:
                    infolists = parse_json(resp)
                    collection.insert_many(infolists)  # 将获取到的信息，插入数据库
                except TypeError as e:
                    print("-----------------------------------------插入数据库失败------------------------------------------------")
                except Exception as e:
                    print("-----------------------------------------获取职位失败------------------------------------------------")
                time.sleep(1)
        else:
            continue
    end = time.clock()
    print("总共获取招聘信息%s条" % num)
    print("总耗时:" + str(end - start))
    count = collection.find().count()
    print("储存职位信息%s条" % count)
